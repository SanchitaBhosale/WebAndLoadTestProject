<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="576a28ae-b6d5-4584-bde5-ca6b53eb8dc2" name="Advay@DESKTOP-0M063TH 2019-01-03 23:14:47" runUser="DESKTOP-0M063TH\Advay" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local" id="f59c1fbb-20b5-4fec-8e17-fdf92e79574e">
    <Description>These are default test settings for a local test run.</Description>
    <Execution hostProcessPlatform="MSIL">
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
    <Deployment runDeploymentRoot="Advay_DESKTOP-0M063TH 2019-01-03 23_14_47" />
    <Properties>
      <Property name="TestSettingsUIType" value="LoadTest" />
    </Properties>
  </TestSettings>
  <Times creation="2019-01-03T23:14:47.9202169+05:30" queuing="2019-01-03T23:14:48.2463449+05:30" start="2019-01-03T23:14:48.3311167+05:30" finish="2019-01-03T23:15:02.4063319+05:30" />
  <ResultSummary outcome="Failed">
    <Counters total="1" executed="1" error="0" failed="1" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" passed="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <WebTest name="WebTest1" storage="c:\users\advay\source\repos\webandloadtestproject\webandloadtestproject\webtest1.webtest" id="1e7336b3-21a5-4c1d-8cd4-c70d8d7d430c" persistedWebTest="">
      <Execution id="0d92fa70-90cd-4ef2-801d-9f1f2ab3dce1" />
    </WebTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry isTransparent="false" testId="1e7336b3-21a5-4c1d-8cd4-c70d8d7d430c" executionId="0d92fa70-90cd-4ef2-801d-9f1f2ab3dce1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <WebTestResult executionId="0d92fa70-90cd-4ef2-801d-9f1f2ab3dce1" testId="1e7336b3-21a5-4c1d-8cd4-c70d8d7d430c" testName="WebTest1" computerName="DESKTOP-0M063TH" duration="00:00:03.1852260" startTime="2019-01-03T23:14:48.5196141+05:30" endTime="2019-01-03T23:15:02.3644465+05:30" testType="4e7599fa-5ecb-43e9-a887-cd63cf72d207" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0d92fa70-90cd-4ef2-801d-9f1f2ab3dce1">
      <Output>
        <ErrorInfo>
          <Message>4 primary requests, 0 dependant requests and 0 conditional rules failed</Message>
        </ErrorInfo>
      </Output>
      <ResultFiles>
        <ResultFile path="WebTest1.webtestResult" />
      </ResultFiles>
      <TestSettings name="Local" id="f59c1fbb-20b5-4fec-8e17-fdf92e79574e">
        <Description>These are default test settings for a local test run.</Description>
        <Execution hostProcessPlatform="MSIL">
          <TestTypeSpecific>
            <WebTestRunConfiguration testTypeId="4e7599fa-5ecb-43e9-a887-cd63cf72d207">
              <Browser name="Internet Explorer 9.0" MaxConnections="6">
                <Headers>
                  <Header name="User-Agent" value="Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)" />
                  <Header name="Accept" value="*/*" />
                  <Header name="Accept-Language" value="{{$IEAcceptLanguage}}" />
                  <Header name="Accept-Encoding" value="GZIP" />
                </Headers>
              </Browser>
            </WebTestRunConfiguration>
          </TestTypeSpecific>
          <AgentRule name="Execution Agents">
          </AgentRule>
        </Execution>
        <Deployment runDeploymentRoot="Advay_DESKTOP-0M063TH 2019-01-03 23_14_47" />
        <Properties>
          <Property name="TestSettingsUIType" value="LoadTest" />
        </Properties>
      </TestSettings>
      <WebTestResultFilePath>Advay_DESKTOP-0M063TH 2019-01-03 23_14_47\In\0d92fa70-90cd-4ef2-801d-9f1f2ab3dce1\WebTest1.webtestResult</WebTestResultFilePath>
    </WebTestResult>
  </Results>
</TestRun>